@charset "utf-8";

/* Mixin */
@import "../mixin/_mixin.scss";
@import "import/_common.scss";

/*=================================================
	LIST
*/
.as-list {
	list-style: none;
	li {
		position: relative;
		&:before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
		}
	}
	&.as-list-number {
		counter-reset: as-list-number-counter;
		li {
			padding-left: $listNumPadding * 1.25;
			&:before {
				content: counter(as-list-number-counter)".";
				counter-increment: as-list-number-counter;
				display: inline-block;
				width: $listNumPadding;
				text-align: right;
			}
		}
		&-bracket {
			counter-reset: as-list-number-counter;
			li {
				padding-left: $listNumPadding * 1.25;
				&:before {
					content: "(" counter(as-list-number-counter) ")";
					counter-increment: as-list-number-counter;
					display: inline-block;
					width: $listNumPadding;
					text-align: right;
				}
			}
		}
		&-lower {
			counter-reset: as-list-number-counter;
			li {
				padding-left: $listNumPadding;
				&:before {
					content: counter(as-list-number-counter, lower-alpha)".";
					counter-increment: as-list-number-counter;
					display: inline-block;
					width: $listNumPadding / 1.2;
					text-align: right;
				}
			}
		}
		&-upper {
			counter-reset: as-list-number-counter;
			li {
				padding-left: $listNumPadding;
				&:before {
					content: counter(as-list-number-counter, upper-alpha)".";
					counter-increment: as-list-number-counter;
					display: inline-block;
					width: $listNumPadding / 1.2;
					text-align: right;
				}
			}
		}
		&-lower-roman {
			counter-reset: as-list-number-counter;
			li {
				padding-left: $listNumPadding * 1.25;
				&:before {
					content: counter(as-list-number-counter, lower-roman)".";
					counter-increment: as-list-number-counter;
					display: inline-block;
					width: $listNumPadding;
					text-align: right;
				}
			}
		}
		&-upper-roman {
			counter-reset: as-list-number-counter;
			li {
				padding-left: $listNumPadding * 1.25;
				&:before {
					content: counter(as-list-number-counter, upper-roman)".";
					counter-increment: as-list-number-counter;
					display: inline-block;
					width: $listNumPadding;
					text-align: right;
				}
			}
		}
	}
	&.as-list-circle,
	&.as-list-square {
		li {
			padding-left: .8em;
			&:before {
				top: .8em;
				width: 4px;
				height: 4px;
				background-color: $defaultGrayLight;
			}
		}
	}
	&.as-list-circle li:before{
		border-radius: 50%;
	}
	&.as-list-dash {
		li {
			padding-left: .8em;
			&:before {
				top: .9em;
				width: 6px;
				height: 1px;
				background-color: $defaultGrayLight;
			}
		}
	}
	&.as-list-inline {
		li {
		   display: inline-block;
		   margin-right: 1em;
		}
	}
}
.as-dl {
	dt {
	   font-weight: $defaultFontWeightBold;
	   color: $defaultBlack;
	}
	dd {
		position: relative;
		margin-bottom: 1em;
		&:before {
			content: "";
			position: absolute;
			top: .8em;
			left: 0;
		}
	}
	&.as-dl-circle {
		dd {
			padding-left: .8em;
			&:before {
				width: 4px;
				height: 4px;
				background-color: $defaultGrayLight;
				border-radius: 50%;
			}
		}
	}
	&.as-dl-square {
		dd {
			padding-left: .8em;
			&:before {
				width: 4px;
				height: 4px;
				background-color: $defaultGrayLight;
			}
		}
	}
	&.as-dl-dash {
		dd {
			padding-left: .8em;
			&:before {
				top: .9em;
				width: 4px;
				height: 1px;
				background-color: $defaultGrayLight;
			}
		}
	}
	&.as-dl-horizontal {
		@include clearBoth;
		dt, dd {
			float: left;
			margin-bottom: 10px;
		}
		dt {
			width: 120px;
			padding-right: .6em;
			text-align: right;
		}
		dd {
			width: calc(100% - 120px);
			color: $defaultGrayMedium;
		}
	}
}